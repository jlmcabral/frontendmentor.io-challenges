/* Custom properties */
:root {
  /* colors */
  --clr-dark: 230 35% 7%;
  --clr-light: 231 77% 90%;
  --clr-white: 0 0% 100%;

  /* font-sizes */
  --fs-900: 9.375rem; /* 150px */
  --fs-800: 6.25rem; /* 100px */
  --fs-700: 3.5rem; /* 56px */
  --fs-600: 2rem; /* 32px */
  --fs-500: 1.75rem; /* 28px */
  --fs-400: 1.125rem; /* 18px */
  --fs-300: 1rem; /* 16px */
  --fs-200: 0.875rem; /* 14px */

  /* font-families */
  --ff-serif: "Bellefair", serif;
  --ff-sans-cond: "Barlow Condensed", sans-serif;
  --ff-sans-normal: "Barlow", sans-serif;
}

/* Utility Classes */
.flex {
  display: flex;
  gap: var(--gap, 1rem);
}

.space-between {
  justify-content: space-between;
}

.grid {
  display: grid;
  gap: var(--gap, 1rem);
}

.container {
  padding-inline: 2em;
  max-width: 80rem;
  margin-inline: auto;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.grow {
  flex-grow: 1;
}

/* Applies a margin-top to all child elements of .flow */
/* Except to the first element */
/* The same could be done with te :last-child together with margin-bottom*/
/* Outline can be removed. It's only being used for debugging purposes */
.flow > *:where(:not(:first-child)) {
  margin-top: var(--flow-space, 1rem);
}

/* Colors */
.bg-dark {
  background-color: hsl(var(--clr-dark) / var(--alpha, 100%));
}

.bg-accent {
  background-color: hsl(var(--clr-light) / var(--alpha, 100%));
}

.bg-white {
  background-color: hsl(var(--clr-white) / var(--alpha, 100%));
}

.text-dark {
  color: hsl(var(--clr-dark));
}

.text-accent {
  color: hsl(var(--clr-light));
}

.text-white {
  color: hsl(var(--clr-white));
}

.alpha-20 {
  --alpha: 20%;
}

/* HTML elements */
h1,
h2,
h3,
h4,
h5,
h6,
p {
  font-weight: normal;
}

body {
  font-family: var(--ff-sans-normal);
  font-size: var(--fs-400);
  color: hsl(var(--clr-white));
  background-color: hsl(var(--clr-dark));
}

/* Typography */
.ff-serif { font-family: var(--ff-serif); }
.ff-sans-cond { font-family: var(--ff-sans-cond); }
.ff-sans-normal { font-family: var(--ff-sans-normal); }

.letter-spacing-1 { letter-spacing: 4.75px; }
.letter-spacing-2 { letter-spacing: 2.7px; }
.letter-spacing-3 { letter-spacing: 2.35px; }

.uppercase { text-transform: uppercase; }

.fs-900 { font-size: var(--fs-900); }
.fs-800 { font-size: var(--fs-800); }
.fs-700 { font-size: var(--fs-700); }
.fs-600 { font-size: var(--fs-600); }
.fs-500 { font-size: var(--fs-500); }
.fs-400 { font-size: var(--fs-400); }
.fs-300 { font-size: var(--fs-300); }
.fs-200 { font-size: var(--fs-200); }


.fs-900,
.fs-800,
.fs-700,
.fs-600 {
    line-height: 1.1;
}

.numbered-title {
  text-transform: uppercase;
  font-family: var(--ff-sans-cond);
  font-size: var(--fs-500);
  letter-spacing: 4.72px;
}

.numbered-title span {
  margin-right: 0.855em;
  font-weight: 700;
  color: hsl(var(--clr-white) / 25%);
 }

/* Components */

.large-button {
position: relative;
border-radius: 50%;
display: grid;
z-index: 1;
place-content: center;
text-decoration: none;
padding: 0 2em;
aspect-ratio: 1;
}

.large-button::after {
  content: '';
  position: absolute;
  z-index: -1;
  width: 100%;
  height: 100%;
  border-radius: inherit;
  background-color: hsl(var(--clr-white) / 15%);
  opacity: 0;
  transition: opacity 300ms linear, transform 300ms ease-in-out;
}

.large-button:hover::after,
.large-button:focus::after {
  opacity: 1;
  transform: scale(1.5);
}

.primary-navigation {
  --gap: 4rem;
  list-style: none;
  padding: 0;
  margin: 0;
  --underline-gap: 2rem;
}

.primary-navigation a {
  text-decoration: none;
}

.primary-navigation a > span {
  font-weight: 700;
  margin-right: 0.5em;
}

.underline-indicators > * {
  cursor: pointer;
  padding: var(--underline-gap, .75rem) 0;
  border: 0;
  border-bottom: 0.2rem solid hsl(var(--clr-white) / var(--alpha, 0%));
}

.underline-indicators > *:hover,
.underline-indicators > *:focus {
  --alpha: 50%;
}

.underline-indicators > .active,
.underline-indicators > [aria-selected="true"] {
  color: hsl(var(--clr-white));
  --alpha: 100%;
}

.tab-list {
  --gap: 2rem;
}

.dot-indicators > * {
  cursor: pointer;
  border: 0;
  border-radius: 50%;
  aspect-ratio: 1;
  padding: .5em;
  background-color: hsl(var(--clr-white) / 25%);
}

.dot-indicators > *:hover,
.dot-indicators > *:focus {
  background-color: hsl(var(--clr-white) / 50%);
}

.dot-indicators > [aria-selected="true"] {
  background-color: hsl(var(--clr-white) / 100%);
}